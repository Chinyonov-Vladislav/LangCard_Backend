{
    "openapi": "3.0.0",
    "info": {
        "title": "Lang Cards API v1",
        "description": "Lang Cards API ",
        "contact": {
            "email": "vlad2000100600@gmail.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000/api/v1",
            "description": "Local development server"
        }
    ],
    "paths": {
        "/answers/{attemptId}": {
            "get": {
                "tags": [
                    "Ответы"
                ],
                "summary": "Получить ответы пользователя в попытке прохождения теста",
                "description": "Возвращает все ответы пользователя на вопросы в рамках указанной попытки прохождения теста. Доступно только владельцу попытки.",
                "operationId": "getAnswersInAttempt",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    },
                    {
                        "name": "attemptId",
                        "in": "path",
                        "description": "ID попытки прохождения теста",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список ответов пользователя для указанной попытки",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ответы пользователя для попытки с id = 15"
                                        },
                                        "data": {
                                            "properties": {
                                                "attempt": {
                                                    "$ref": "#/components/schemas/UserTestResultResource"
                                                },
                                                "questionsWithAnswers": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/UserTestAnswerResource"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Попытка не найдена",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Попытка с id = 15 не найдена"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Попытка не принадлежит авторизованному пользователю",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Попытка с id = 15 не принадлежит авторизованному пользователю"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Попытка ещё не завершена",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Попытка с id = 15 ещё не завершена"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "420": {
                        "$ref": "#/components/responses/NotVerifiedEmail"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Аутентификация"
                ],
                "summary": "Authenticate user",
                "description": "Authenticates user with email/password. Returns access tokens or 2FA data if enabled.",
                "operationId": "da73042d1ae72bb5a5531c2b9c96f8c6",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    }
                ],
                "requestBody": {
                    "description": "User credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful authentication",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "status": {
                                                    "enum": [
                                                        "success",
                                                        "error"
                                                    ],
                                                    "example": "success"
                                                },
                                                "data": {
                                                    "properties": {
                                                        "access_token": {
                                                            "type": "string"
                                                        },
                                                        "email_is_verified": {
                                                            "type": "boolean"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "status": {
                                                    "enum": [
                                                        "success",
                                                        "error"
                                                    ],
                                                    "example": "success"
                                                },
                                                "data": {
                                                    "properties": {
                                                        "two_factor_email_enabled": {
                                                            "type": "boolean"
                                                        },
                                                        "two_factor_google_authenticator_enabled": {
                                                            "type": "boolean"
                                                        },
                                                        "two_factor_token": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Включена двухфакторная авторизация"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "enum": [
                                                "success",
                                                "error"
                                            ],
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/{provider}/redirect": {
            "get": {
                "tags": [
                    "Аутентификация через OAuth"
                ],
                "summary": "Получить OAuth redirect URL для провайдера",
                "operationId": "d14ca4bff0d39ab2f2fdd7b4debb9947",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    },
                    {
                        "name": "provider",
                        "in": "path",
                        "description": "Провайдер OAuth аутентификации",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "google",
                                "yandex",
                                "microsoft"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "URL редиректа получен успешно",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "enum": [
                                                "success",
                                                "error"
                                            ],
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "OAuth URL получен успешно"
                                        },
                                        "data": {
                                            "properties": {
                                                "url": {
                                                    "type": "string",
                                                    "example": "https://accounts.google.com/o/oauth2/auth?..."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Неподдерживаемый провайдер",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "enum": [
                                                "success",
                                                "error"
                                            ],
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Провайдер 'facebook' не поддерживается."
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/{provider}/callback": {
            "get": {
                "tags": [
                    "Аутентификация через OAuth"
                ],
                "summary": "OAuth Callback от провайдера",
                "description": "Обработка callback-аутентификации от OAuth-провайдера. Возвращает access_token или two_factor_token. Устанавливает refresh_token в cookie.",
                "operationId": "2a9f8a3ae326c4955427f4381ec10656",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    },
                    {
                        "name": "provider",
                        "in": "path",
                        "description": "Провайдер OAuth-аутентификации",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "google",
                                "yandex",
                                "microsoft"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешная авторизация или требуется двухфакторная авторизация",
                        "headers": {
                            "Set-Cookie": {
                                "description": "Refresh токен устанавливается в cookie (если 2FA отключена)",
                                "schema": {
                                    "type": "string",
                                    "example": "refresh_token=abc123; HttpOnly; Secure"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "status": {
                                                    "enum": [
                                                        "success",
                                                        "error"
                                                    ],
                                                    "example": "success"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Авторизация прошла успешно."
                                                },
                                                "data": {
                                                    "properties": {
                                                        "access_token": {
                                                            "type": "string",
                                                            "example": "eyJhbGciOiJIUzI1..."
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "status": {
                                                    "enum": [
                                                        "success",
                                                        "error"
                                                    ],
                                                    "example": "success"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Включена двухфакторная авторизация"
                                                },
                                                "data": {
                                                    "properties": {
                                                        "two_factor_email_enabled": {
                                                            "type": "boolean",
                                                            "example": true
                                                        },
                                                        "two_factor_google_authenticator_enabled": {
                                                            "type": "boolean",
                                                            "example": false
                                                        },
                                                        "two_factor_token": {
                                                            "type": "string",
                                                            "example": "abc123def456"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Провайдер не поддерживается",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ],
                                    "properties": {
                                        "status": {
                                            "enum": [
                                                "success",
                                                "error"
                                            ],
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Провайдер 'facebook' не поддерживается."
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка при аутентификации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "status",
                                        "message",
                                        "errors"
                                    ],
                                    "properties": {
                                        "status": {
                                            "enum": [
                                                "success",
                                                "error"
                                            ],
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Произошла ошибка при авторизации через yandex."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/refresh": {
            "post": {
                "tags": [
                    "Обновление токенов авторизации"
                ],
                "summary": "Обновление access и refresh токенов",
                "description": "Обновляет access токен и refresh токен пользователя, используя refresh token из cookie",
                "operationId": "refreshTokens",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    },
                    {
                        "name": "refresh_token",
                        "in": "cookie",
                        "description": "Refresh токен, передаваемый через cookie",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Токены успешно обновлены",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success",
                                                "error"
                                            ],
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Access и Refresh токены успешно обновлены"
                                        },
                                        "data": {
                                            "properties": {
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Невалидный refresh токен или отсутствует токен",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success",
                                                "error"
                                            ],
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Невалидный refresh токен"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Недопустимый тип владельца токена",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success",
                                                "error"
                                            ],
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Недопустимый тип владельца токена"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Выход из аккаунта"
                ],
                "summary": "Выход из системы (отзыв токенов)",
                "description": "Удаляет access и refresh токены текущего авторизованного пользователя. Требуется Bearer токен.",
                "operationId": "logoutUser",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешный выход из системы",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Пользователь успешно вышел из системы"
                                        },
                                        "data": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/password/sendResetLink": {
            "post": {
                "tags": [
                    "Сброс пароля для неавторизованного пользователя"
                ],
                "summary": "Отправка ссылки для сброса пароля",
                "description": "Отправляет письмо со ссылкой для сброса пароля на указанный email",
                "operationId": "88a461eccd7c931c5674bb6f82196dcd",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SendResetLinkRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ссылка успешно отправлена",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success",
                                                "error"
                                            ],
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ссылка для сброса пароля отправлена."
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Пользователь с таким email зарегистрирован через OAuth или не существует",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success",
                                                "error"
                                            ],
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Пользователь не зарегистрирован с паролем."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Ошибка валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Поле email обязательно для заполнения."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/password/reset": {
            "post": {
                "tags": [
                    "Сброс пароля для неавторизованного пользователя"
                ],
                "summary": "Сброс пароля пользователя",
                "description": "Позволяет сбросить пароль по email и токену сброса",
                "operationId": "resetPassword",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetPasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Пароль успешно изменён",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success",
                                                "error"
                                            ],
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User password changed successfully"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный токен сброса пароля",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success",
                                                "error"
                                            ],
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid password reset token"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Истёкший токен сброса пароля",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success",
                                                "error"
                                            ],
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Expired password reset token"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Ошибки валидации запроса",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email field is required."
                                                ],
                                                "password": [
                                                    "The password must be at least 8 characters."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/updatePassword": {
            "post": {
                "tags": [
                    "Обновление пароля авторизованного пользователя"
                ],
                "summary": "Обновление пароля авторизованного пользователя",
                "description": "Позволяет авторизованному пользователю обновить свой пароль, если он зарегистрирован с email и паролем.",
                "operationId": "updatePassword",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Пароль успешно обновлён",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Пароль пользователя успешно изменён"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Пользователь не зарегистрирован с email и паролем, смена пароля невозможна",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Текущий авторизованный пользователь не зарегистрирован с использованием email - адреса и пароля, поэтому не обладает возможностью сменить пароль!"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/registration": {
            "post": {
                "tags": [
                    "Регистрация"
                ],
                "summary": "Регистрация нового пользователя",
                "operationId": "registerUser",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegistrationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Пользователь успешно зарегистрирован",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Пользователь успешно зарегистрирован"
                                        },
                                        "data": {
                                            "properties": {
                                                "timezone_job_id": {
                                                    "description": "Идентификатор фоновой задачи на определение часового пояса (если не удалось получить сразу)",
                                                    "type": "string",
                                                    "example": "job_12345"
                                                },
                                                "currency_job_id": {
                                                    "description": "Идентификатор фоновой задачи на определение валюты (если не удалось получить сразу)",
                                                    "type": "string",
                                                    "example": "job_67890"
                                                }
                                            },
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Ошибка валидации входных данных",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Поле email уже используется."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка при регистрации пользователя",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "success",
                                                "error"
                                            ],
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Не удалось зарегистрировать пользователя."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/dailyRewards": {
            "get": {
                "tags": [
                    "Ежедневная награда"
                ],
                "summary": "Получить данные о ежедневных наградах авторизованного пользователя",
                "description": "Возвращает список ежедневных наград и информацию о том, может ли текущий пользователь забрать награду сегодня.",
                "operationId": "48ea13440cf884c81735f0e07f2d4431",
                "responses": {
                    "200": {
                        "description": "Данные получены успешно",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Данные о ежедневных наградах для авторизованного пользователя"
                                        },
                                        "data": {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/DailyRewardResource"
                                                    }
                                                },
                                                "can_user_take_daily_reward": {
                                                    "description": "Флаг, указывающий, может ли пользователь забрать награду сегодня",
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "420": {
                        "$ref": "#/components/responses/NotVerifiedEmail"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/dailyRewards": {
            "post": {
                "tags": [
                    "Ежедневная награда"
                ],
                "summary": "Забрать ежедневную награду",
                "description": "Позволяет авторизованному пользователю получить награду за текущий день, если она доступна.",
                "operationId": "39230f86b0b0af8fe789f9fd462c5124",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Награда успешно получена",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Пользователь успешно забрал ежедневную награду"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Конфликт — награда уже забрана сегодня или отсутствует для этого дня",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Пользователь не может забрать ежедневную награду, так как сегодня он уже её забирал"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "420": {
                        "$ref": "#/components/responses/NotVerifiedEmail"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/decks": {
            "get": {
                "tags": [
                    "Колоды"
                ],
                "summary": "Получение списка колод",
                "description": "Возвращает список колод с фильтрацией и пагинацией.",
                "operationId": "getDecks",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Номер страницы",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "example": 1
                        }
                    },
                    {
                        "name": "countOnPage",
                        "in": "query",
                        "description": "Количество элементов на странице",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "example": 10
                        }
                    },
                    {
                        "name": "originalLanguages",
                        "in": "query",
                        "description": "Коды оригинальных языков через запятую (en,fr,de)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "en,fr"
                        }
                    },
                    {
                        "name": "targetLanguages",
                        "in": "query",
                        "description": "Коды целевых языков через запятую (es,it)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "es,it"
                        }
                    },
                    {
                        "name": "showPremium",
                        "in": "query",
                        "description": "Фильтр премиум-колод: only — только премиум, exclude — исключить, all — все",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "only",
                                "exclude",
                                "all"
                            ],
                            "example": "all"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешный ответ с пагинированным списком колод",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ],
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Данные колод на странице 1"
                                        },
                                        "data": {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/DeckResource"
                                                    }
                                                },
                                                "pagination": {
                                                    "$ref": "#/components/schemas/PaginationResource"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "420": {
                        "$ref": "#/components/responses/NotVerifiedEmail"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Колоды"
                ],
                "summary": "Создание новой колоды",
                "description": "Создаёт новую языковую колоду и возвращает её полную информацию.",
                "operationId": "createDeck",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    }
                ],
                "requestBody": {
                    "description": "Данные для создания новой колоды",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateDeckRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Новая колода успешно создана",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Новая колода была успешно создана"
                                        },
                                        "data": {
                                            "properties": {
                                                "newDeck": {
                                                    "$ref": "#/components/schemas/DeckResource"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Ошибка валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "В запросе содержатся ошибки"
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Название обязательно для заполнения."
                                                    }
                                                },
                                                "original_language_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Необходимо указать язык оригинала."
                                                    }
                                                },
                                                "target_language_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Язык перевода должен отличаться от языка оригинала."
                                                    }
                                                },
                                                "is_premium": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Поле 'is_premium' должно быть булевым значением (true/false)."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Произошла непредвиденная ошибка"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "420": {
                        "$ref": "#/components/responses/NotVerifiedEmail"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/decks/{id}": {
            "get": {
                "tags": [
                    "Колоды"
                ],
                "summary": "Получить колоду по ID",
                "description": "Возвращает полную информацию о колоде по её ID.",
                "operationId": "getDeck",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID колоды",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "example": 5
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Колода найдена",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Колода с ID 5 найдена"
                                        },
                                        "data": {
                                            "properties": {
                                                "item": {
                                                    "$ref": "#/components/schemas/DeckResource"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Колода не найдена",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Колода с ID 99 не найдена"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Доступ к премиум-колоде запрещён",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Доступ к премиум-колоде с ID 5 запрещён"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "420": {
                        "$ref": "#/components/responses/NotVerifiedEmail"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Колоды"
                ],
                "summary": "Удаление колоды",
                "description": "Удаляет колоду по её ID. Если для колоды нет запущенных тестов — удаление будет физическим, иначе — мягким (soft delete).",
                "operationId": "deleteDeck",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID колоды для удаления",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Колода успешно удалена",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Колода 5 была удалена (мягко или физически)."
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Колода не найдена",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Колода с ID 5 не найдена"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Пользователь не является владельцем колоды",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Пользователь не является владельцем колоды."
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "420": {
                        "$ref": "#/components/responses/NotVerifiedEmail"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/decks/{id}/topics": {
            "post": {
                "tags": [
                    "Колоды"
                ],
                "summary": "Добавление тем в колоду",
                "description": "Добавляет одну или несколько тем в существующую колоду по её ID.",
                "operationId": "addTopicsToDeck",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID колоды, в которую добавляются темы",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddingTopicsToDeckRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Темы успешно добавлены",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Темы установлены для колоды"
                                        },
                                        "data": {
                                            "properties": {
                                                "newDeck": {
                                                    "$ref": "#/components/schemas/DeckResource"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Колода не найдена",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Колода с ID 5 не найдена"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Ошибка валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "topic_ids": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Поле 'topic_ids' обязательно для заполнения."
                                                    }
                                                },
                                                "topic_ids.*": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Каждый элемент 'topic_ids' должен быть существующим ID темы."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "420": {
                        "$ref": "#/components/responses/NotVerifiedEmail"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/sendVerificationCodeEmail": {
            "post": {
                "tags": [
                    "Верификация электронного адреса"
                ],
                "summary": "Отправка кода подтверждения на email",
                "description": "Отправляет код подтверждения на email текущего авторизованного пользователя, если его email ещё не был подтверждён.",
                "operationId": "sendVerificationCodeEmail",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Код подтверждения успешно отправлен",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Сообщение с кодом для подтверждения email - адреса было отправлено на электронный адрес, указанный при регистрации"
                                        },
                                        "data": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Email уже подтверждён",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Email - адрес текущего авторизованного пользователя уже был ранее подтвержден!"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "description": "Ошибка при генерации кода",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Произошла ошибка при генерации кода"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/verificationEmailAddress": {
            "post": {
                "tags": [
                    "Верификация электронного адреса"
                ],
                "summary": "Подтверждение email авторизованного пользователя кодом",
                "description": "Позволяет подтвердить email пользователя по коду, отправленному на электронную почту.",
                "operationId": "verificationEmailAddress",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailVerificationCodeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email успешно подтверждён",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Электронный адрес авторизованного пользователя был успешно подтвержден"
                                        },
                                        "data": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Пользователь с id = 5 не найден"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Email уже подтверждён",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Email - адрес текущего авторизованного пользователя уже был ранее подтвержден!"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Код не был запрошен ранее",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Текущий авторизованный пользователь не запрашивал код для подтверждения почты"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "412": {
                        "description": "Неверный код подтверждения",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Предоставленный код не соответствует коду из электронного сообщения"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "422": {
                        "description": "Ошибка валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Предоставленные данные не валидны"
                                        },
                                        "errors": {
                                            "properties": {
                                                "code": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Token is required"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/historyAttempts": {
            "get": {
                "tags": [
                    "История попыток прохождения тестов"
                ],
                "summary": "Получить историю попыток прохождения тестов",
                "description": "Возвращает пагинированный список попыток прохождения тестов текущего авторизованного пользователя.",
                "operationId": "getAttemptsTests",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Номер страницы",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "example": 1
                        }
                    },
                    {
                        "name": "countOnPage",
                        "in": "query",
                        "description": "Количество элементов на странице",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список попыток получен успешно",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Данные о попытках на странице 1"
                                        },
                                        "data": {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/UserTestResultResource"
                                                    }
                                                },
                                                "pagination": {
                                                    "$ref": "#/components/schemas/PaginationResource"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "420": {
                        "$ref": "#/components/responses/NotVerifiedEmail"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/historyPurchases": {
            "get": {
                "tags": [
                    "История покупок"
                ],
                "summary": "Получить историю покупок авторизованного пользователя",
                "operationId": "c8bb155e70df625a3e094e6d5c9c56e2",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Номер страницы для пагинации",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "example": 1
                        }
                    },
                    {
                        "name": "countOnPage",
                        "in": "query",
                        "description": "Количество элементов на странице",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешный ответ с историей покупок и пагинацией",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ],
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "История покупок пользователя (ID: 5) успешно получена."
                                        },
                                        "data": {
                                            "required": [
                                                "items",
                                                "pagination"
                                            ],
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/HistoryPurchaseResource"
                                                    }
                                                },
                                                "pagination": {
                                                    "$ref": "#/components/schemas/PaginationResource"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "420": {
                        "$ref": "#/components/responses/NotVerifiedEmail"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/setInviter": {
            "post": {
                "tags": [
                    "Привязка к пользователю, который пригласил в систему"
                ],
                "summary": "Установить пригласившего пользователя",
                "description": "Позволяет авторизованному пользователю указать другого пользователя, который его пригласил, по коду приглашения.",
                "operationId": "setInviter",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetInviterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Успешная установка пригласившего пользователя",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Благодарим! Вы указали пригласившего пользователя."
                                        },
                                        "data": {
                                            "required": [
                                                "inviter"
                                            ],
                                            "properties": {
                                                "inviter": {
                                                    "$ref": "#/components/schemas/InviterResource"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "description": "Не найден пользователь с таким кодом",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Не найден пользователь, владеющий данным invite-кодом"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Конфликт — код уже установлен, код невалиден или нарушает бизнес-логику",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Конфликт — код уже установлен, код невалиден или нарушает бизнес-логику"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Ошибка валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "invite_code": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Invite Code is required"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/languages": {
            "get": {
                "tags": [
                    "Языки"
                ],
                "summary": "Получить список всех языков",
                "operationId": "0965a1dc5ee3cfa258b3b4a36dba8d89",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список языков успешно получен",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ],
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Все данные о языках"
                                        },
                                        "data": {
                                            "required": [
                                                "items"
                                            ],
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/LanguageResource"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "420": {
                        "$ref": "#/components/responses/NotVerifiedEmail"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Языки"
                ],
                "summary": "Добавить новый язык",
                "operationId": "624cee562a79f240e4c121cdd9dc90ac",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddingLanguageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Язык успешно добавлен",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ],
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Данные о новом языке успешно сохранены"
                                        },
                                        "data": {
                                            "required": [
                                                "language"
                                            ],
                                            "properties": {
                                                "language": {
                                                    "$ref": "#/components/schemas/LanguageResource"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Ошибка валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Поле 'Название' обязательно для заполнения"
                                                    }
                                                },
                                                "native_name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Поле 'Родное название' обязательно для заполнения"
                                                    }
                                                },
                                                "code": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Поле 'Код языка' обязательно для заполнения"
                                                    }
                                                },
                                                "flag": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Поле 'Флаг' обязательно для заполнения"
                                                    }
                                                },
                                                "locale_lang": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Поле 'Локаль' обязательно для заполнения."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "420": {
                        "$ref": "#/components/responses/NotVerifiedEmail"
                    },
                    "403": {
                        "$ref": "#/components/responses/NotAdmin"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/profile/{id}": {
            "get": {
                "tags": [
                    "Профиль"
                ],
                "summary": "Получение профиля пользователя",
                "description": "Возвращает данные профиля. Если id не передан — возвращаются данные авторизованного пользователя.",
                "operationId": "320a30f61ad09f7ce9e45334f0c00018",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID пользователя. Если не указан — берётся ID авторизованного пользователя.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Данные профиля успешно получены",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Данные о профиле пользователя с id = 15"
                                        },
                                        "data": {
                                            "properties": {
                                                "item": {
                                                    "$ref": "#/components/schemas/ProfileUserResource"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "420": {
                        "$ref": "#/components/responses/NotVerifiedEmail"
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Пользователь с id = 15 не найден"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/profile/": {
            "get": {
                "tags": [
                    "Профиль"
                ],
                "summary": "Получение профиля авторизованного пользователя",
                "description": "Возвращает данные профиля авторизованного пользователя",
                "operationId": "87e59e5bafdf593b4a2dd77a78324b07",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Данные профиля успешно получены",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Данные о профиле пользователя с id = 15"
                                        },
                                        "data": {
                                            "properties": {
                                                "item": {
                                                    "$ref": "#/components/schemas/ProfileUserResource"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "420": {
                        "$ref": "#/components/responses/NotVerifiedEmail"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/promocodes": {
            "post": {
                "tags": [
                    "Промокоды"
                ],
                "summary": "Создание нескольких промокодов",
                "description": "Создаёт указанное количество промокодов и автоматически привязывает их к случайным активным тарифам. Доступно только администраторам.",
                "operationId": "createPromocodes",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePromocodeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Промокоды успешно созданы",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Промокоды были успешно созданы в количестве 10 штук"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Нет существующих тарифов для привязки промокодов",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "status",
                                        "message",
                                        "errors"
                                    ],
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Нет существующих тарифов"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Ошибка валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "message",
                                        "errors"
                                    ],
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "count": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Поле 'count' обязательно для заполнения"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "status",
                                        "message",
                                        "errors"
                                    ],
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Сообщение об ошибке"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "420": {
                        "$ref": "#/components/responses/NotVerifiedEmail"
                    },
                    "403": {
                        "$ref": "#/components/responses/NotAdmin"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/promocodes/activate": {
            "post": {
                "tags": [
                    "Промокоды"
                ],
                "summary": "Активация промокода пользователем",
                "description": "Позволяет пользователю активировать промокод для продления VIP-статуса. Требует авторизации через Bearer токен.",
                "operationId": "activatePromocode",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ActivatePromocodeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Промокод успешно активирован, VIP-статус обновлен",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ],
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Обновлена дата окончания VIP - статуса."
                                        },
                                        "data": {
                                            "properties": {
                                                "new_date_end_vip_status": {
                                                    "$ref": "#/components/schemas/VipStatusEndResource"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Промокод не найден",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "status",
                                        "message",
                                        "errors"
                                    ],
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Промокод не найден"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Промокод уже был активирован ранее",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "status",
                                        "message",
                                        "errors"
                                    ],
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Предоставленный промокод уже был активирован ранее"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Ошибка валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "message",
                                        "errors"
                                    ],
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "code": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Поле 'code' обязательно для заполнения"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "420": {
                        "$ref": "#/components/responses/NotVerifiedEmail"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/promocodes/download/{type}/{tariffId}": {
            "get": {
                "tags": [
                    "Промокоды"
                ],
                "summary": "Скачать PDF с активными промокодами для конкретного тарифа",
                "description": "Возвращает PDF-файл с активными промокодами для конкретного тарифа",
                "operationId": "downloadPromocodesCertaionTariff",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Тип PDF: 'table' — таблица, 'card' — карточки",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "table",
                                "card"
                            ],
                            "example": "table"
                        }
                    },
                    {
                        "name": "tariffId",
                        "in": "path",
                        "description": "Идентификатор тарифа",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PDF-файл с активными промокодами",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Тариф с указанным id не найден",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "status",
                                        "message",
                                        "errors"
                                    ],
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Тариф с id = 1 не существует"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "420": {
                        "$ref": "#/components/responses/NotVerifiedEmail"
                    },
                    "403": {
                        "$ref": "#/components/responses/NotAdmin"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/promocodes/download/{type}": {
            "get": {
                "tags": [
                    "Промокоды"
                ],
                "summary": "Скачать PDF с активными промокодами для всех тарифов",
                "description": "Возвращает PDF-файл с активными промокодами для всех тарифов",
                "operationId": "downloadPromocodesAllTariffs",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Тип PDF: 'table' — таблица, 'card' — карточки",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "table",
                                "card"
                            ],
                            "example": "table"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PDF-файл с активными промокодами",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "420": {
                        "$ref": "#/components/responses/NotVerifiedEmail"
                    },
                    "403": {
                        "$ref": "#/components/responses/NotAdmin"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/checkSpelling": {
            "post": {
                "tags": [
                    "Проверка правописания"
                ],
                "summary": "Проверка правописания",
                "description": "Проверяет грамматическую корректность предложений с помощью Hunspell. Возвращает список слов с ошибками и варианты исправлений.",
                "operationId": "checkSpelling",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CheckCorrectSentenceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Результат проверки правописания",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ],
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Результат проверки правописания"
                                        },
                                        "data": {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/SpellingCheckItemResource"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка при проверке текста",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "status",
                                        "message",
                                        "errors"
                                    ],
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ошибка при запуске Hunspell"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "420": {
                        "$ref": "#/components/responses/NotVerifiedEmail"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/stats/countUsersByMonths": {
            "get": {
                "tags": [
                    "Статистика"
                ],
                "summary": "Получение количества пользователей по месяцам",
                "operationId": "386bd64da531e483082b8c1cd6da2fa7",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    },
                    {
                        "name": "start_month",
                        "in": "query",
                        "description": "Начальный месяц в формате YYYY-MM",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d{4}-(0[1-9]|1[0-2])$",
                            "example": "2024-01"
                        }
                    },
                    {
                        "name": "end_month",
                        "in": "query",
                        "description": "Конечный месяц в формате YYYY-MM",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d{4}-(0[1-9]|1[0-2])$",
                            "example": "2024-08"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешный ответ с количеством пользователей по месяцам",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Количество пользователей, зарегистрировавшихся в системе по месяцам"
                                        },
                                        "data": {
                                            "properties": {
                                                "countUsersByMonths": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/CountUsersByMonthsResource"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Ошибка валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "start_month": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The field 'Start month' must be in YYYY-MM format"
                                                    }
                                                },
                                                "end_month": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The field 'End month' must be in YYYY-MM format"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "420": {
                        "$ref": "#/components/responses/NotVerifiedEmail"
                    },
                    "403": {
                        "$ref": "#/components/responses/NotAdmin"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/stats/countDecksByTopic": {
            "get": {
                "tags": [
                    "Статистика"
                ],
                "summary": "Получить количество активных колод по тематикам с процентным соотношением",
                "description": "Возвращает список тем с количеством колод и их процентом от общего количества колод. Доступно только администраторам.",
                "operationId": "getTopicsWithCountDecksAndPercentage",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешный ответ с данными статистики по темам",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Количество колод по топикам с процентным соотношением"
                                        },
                                        "data": {
                                            "properties": {
                                                "topicsWithCountDecksAndPercentage": {
                                                    "description": "Массив тем с количеством колод и процентом",
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/TopicWithDecksCountResource"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "420": {
                        "$ref": "#/components/responses/NotVerifiedEmail"
                    },
                    "403": {
                        "$ref": "#/components/responses/NotAdmin"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tariffs": {
            "get": {
                "tags": [
                    "Тарифы"
                ],
                "summary": "Получить список активных тарифов",
                "operationId": "c0f342655c3fbeaa75d45d6f6dcf1ab6",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешный ответ с данными тарифов",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ],
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Данные всех тарифов успешно получены"
                                        },
                                        "data": {
                                            "required": [
                                                "items"
                                            ],
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/TariffResource"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "420": {
                        "$ref": "#/components/responses/NotVerifiedEmail"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Тарифы"
                ],
                "summary": "Добавить новый тариф",
                "operationId": "6ca6d1949e95dac02336136db991d9f9",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddingNewTariffRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Тариф успешно создан",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "status",
                                        "message"
                                    ],
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Тариф успешно создан"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Ошибка валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Topic name is required."
                                                    }
                                                },
                                                "days": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The 'days' field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "420": {
                        "$ref": "#/components/responses/NotVerifiedEmail"
                    },
                    "403": {
                        "$ref": "#/components/responses/NotAdmin"
                    },
                    "500": {
                        "description": "Ошибка сервера при создании тарифа",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "status",
                                        "message",
                                        "errors"
                                    ],
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Не удалось создать тариф"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tariffs/{id}": {
            "patch": {
                "tags": [
                    "Тарифы"
                ],
                "summary": "Изменить статус тарифа",
                "operationId": "9a617b8ad3650f1a8d50ab7e0aacf632",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID тарифа",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                        },
                        "example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Статус тарифа успешно изменён",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "status",
                                        "message"
                                    ],
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Статус тарифа с ID 1 изменён"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Тариф с указанным ID не найден",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "status",
                                        "message"
                                    ],
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Тариф с ID 1 не найден"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "420": {
                        "$ref": "#/components/responses/NotVerifiedEmail"
                    },
                    "403": {
                        "$ref": "#/components/responses/NotAdmin"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/timezones": {
            "get": {
                "tags": [
                    "Временные зоны"
                ],
                "summary": "Получить список часовых поясов с пагинацией и фильтрацией",
                "operationId": "getTimezones",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Номер страницы (целое число >= 1)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "countOnPage",
                        "in": "query",
                        "description": "Количество элементов на странице (целое число >= 1)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Список полей через запятую, которые нужно вернуть",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешный ответ с данными и пагинацией",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Данные часовых поясов"
                                        },
                                        "data": {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/TimezoneResource"
                                                    }
                                                },
                                                "pagination": {
                                                    "description": "Информация о пагинации",
                                                    "properties": {
                                                        "current_page": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "per_page": {
                                                            "type": "integer",
                                                            "example": 10
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 100
                                                        },
                                                        "last_page": {
                                                            "type": "integer",
                                                            "example": 10
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "420": {
                        "$ref": "#/components/responses/NotVerifiedEmail"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/topics": {
            "get": {
                "tags": [
                    "Топики"
                ],
                "summary": "Получить список тем",
                "description": "Возвращает все темы из базы данных",
                "operationId": "getTopics",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешный ответ с коллекцией тем",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Темы из базы данных"
                                        },
                                        "data": {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/TopicResource"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "420": {
                        "$ref": "#/components/responses/NotVerifiedEmail"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Топики"
                ],
                "summary": "Создание новой темы",
                "description": "Создает новую тему. Доступно только для администраторов.",
                "operationId": "createTopic",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatingTopicRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Тема успешно создана",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Информация о новом топике успешно создана"
                                        },
                                        "data": {
                                            "properties": {
                                                "item": {
                                                    "$ref": "#/components/schemas/TopicResource"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Ошибка валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Topic name is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "420": {
                        "$ref": "#/components/responses/NotVerifiedEmail"
                    },
                    "403": {
                        "$ref": "#/components/responses/NotAdmin"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/topics/{id}": {
            "put": {
                "tags": [
                    "Топики"
                ],
                "summary": "Update an existing topic",
                "description": "Обновляет информацию о существующей теме по её ID. Доступно только для администраторов.",
                "operationId": "updateTopic",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID темы для обновления",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatingTopicRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Информация о топике успешно обновлена"
                    },
                    "404": {
                        "description": "Топик с указанным ID не найден",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Топик с id = 1 не найден"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Topic name is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "420": {
                        "$ref": "#/components/responses/NotVerifiedEmail"
                    },
                    "403": {
                        "$ref": "#/components/responses/NotAdmin"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Топики"
                ],
                "summary": "Delete a topic",
                "description": "Удаляет тему по ID. Доступно только для администраторов.",
                "operationId": "deleteTopic",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID темы для удаления",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Топик был успешно удалён"
                    },
                    "404": {
                        "description": "Топик не найден",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Топик c id = 1 не найден"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "420": {
                        "$ref": "#/components/responses/NotVerifiedEmail"
                    },
                    "403": {
                        "$ref": "#/components/responses/NotAdmin"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/twoFactorVerification": {
            "post": {
                "tags": [
                    "Двухфакторная аутентификация"
                ],
                "summary": "Включение или отключение двухфакторной аутентификации",
                "description": "Включает или отключает двухфакторную аутентификацию (email или Google Authenticator) для текущего пользователя",
                "operationId": "enableDisableTwoFactorAuthorization",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EnableDisableATwoFactorAuthorizationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Двухфакторная авторизация успешно включена или отключена",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Двухфакторная авторизация через Google Authenticator подключена"
                                        },
                                        "data": {
                                            "properties": {
                                                "email2fa_enable": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "google2fa_enable": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "secret": {
                                                    "type": "string",
                                                    "example": "JBSWY3DPEHPK3PXP",
                                                    "nullable": true
                                                },
                                                "qr": {
                                                    "description": "QR-код в base64",
                                                    "type": "string",
                                                    "format": "byte",
                                                    "nullable": true
                                                },
                                                "recovery_codes": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "8XF2-HZ91"
                                                    },
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Неподдерживаемый тип двухфакторной авторизации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Неподдерживаемый тип двухфакторной авторизации"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Невозможно включить двухфакторную аутентификацию по email (email отсутствует)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "status",
                                        "message",
                                        "errors"
                                    ],
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Вы не можете включить двухфакторную авторизацию через электронную почту, так как аккаунт не имеет электронной почты"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка генерации Google QR-кода или ключа",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "status",
                                        "message",
                                        "errors"
                                    ],
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Произошла ошибка при подключении двухфакторной авторизации через Google Authenticator"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/twoFactorVerification/sendEmailWithCode": {
            "post": {
                "tags": [
                    "Двухфакторная аутентификация"
                ],
                "summary": "Отправка email с кодом двухфакторной аутентификации",
                "description": "Отправляет код подтверждения на email пользователя, если включена двухфакторная авторизация через email.",
                "operationId": "sendEmailWithCode",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TwoFactorAuthorizationTokenRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Код успешно отправлен на email",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Сообщение с кодом было отправлено на электронную почту"
                                        },
                                        "data": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "У пользователя отключена двухфакторная авторизация по email",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Для пользователя с email - адресом выключена двухфакторная авторизация"
                                        },
                                        "data": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Токен не найден",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Отсутствует запись о токене двухфакторной авторизации"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Ошибка валидации токена",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "token": [
                                                    "Token is required"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/twoFactorVerification/confirmEmailCode": {
            "post": {
                "tags": [
                    "Двухфакторная аутентификация"
                ],
                "summary": "Подтверждение кода двухфакторной аутентификации по Email",
                "description": "Подтверждение кода, отправленного по Email для двухфакторной аутентификации.",
                "operationId": "confirmCode",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConfirmationCodeEmailTwoFactorAuthorizationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Пользователь успешно прошёл двухфакторную авторизацию",
                        "headers": {
                            "Set-Cookie": {
                                "description": "Refresh token cookie",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Пользователь успешно прошёл двухфакторную авторизацию"
                                        },
                                        "data": {
                                            "properties": {
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Введенный код некорректен",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Введенный код некорректен! Повторите попытку ввода!"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Отсутствует запись о токене двухфакторной авторизации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Отсутствует запись о токене двухфакторной авторизации"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Двухфакторная авторизация отключена или код не запрашивался",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Для текущего пользователя отключена двухфакторная авторизация | Текущий пользователь не запрашивал код для двухфакторной авторизации по электронной почте"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "410": {
                        "description": "Срок действия кода истёк",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Срок действия кода истёк. Запросите новый код"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/twoFactorVerification/verifyCodeGoogle2fa": {
            "post": {
                "tags": [
                    "Двухфакторная аутентификация"
                ],
                "summary": "Подтверждение Google Authenticator кода",
                "description": "Подтверждает код из приложения Google Authenticator. При успешной проверке возвращает access token и устанавливает refresh token в cookie.",
                "operationId": "verifyCodeGoogle2fa",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CodeGoogleAuthenticatorRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Пользователь успешно прошёл двухфакторную авторизацию",
                        "headers": {
                            "Set-Cookie": {
                                "description": "Устанавливает refresh_token в cookie",
                                "schema": {
                                    "type": "string",
                                    "example": "refresh_token=...; HttpOnly; Path=/; Max-Age=3600"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Пользователь успешно прошёл двухфакторную авторизацию"
                                        },
                                        "data": {
                                            "properties": {
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "eyJhbGciOi..."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "У пользователя отключена двухфакторная аутентификация через Google",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Двухфакторная авторизация через Google Authenticator отключена"
                                        },
                                        "data": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Не найден токен двухфакторной авторизации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Отсутствует запись о токене двухфакторной авторизации"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Неверный код от Google Authenticator",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Неверный код двухфакторной авторизации через Google Authenticator"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Ошибка валидации полей запроса",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "code": "The code is required."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/twoFactorVerification/useRecoveryCode": {
            "post": {
                "tags": [
                    "Двухфакторная аутентификация"
                ],
                "summary": "Использование кода восстановления двухфакторной авторизации",
                "description": "Позволяет пройти двухфакторную авторизацию с использованием кода восстановления.",
                "operationId": "useRecoveryCode",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UseRecoveryCodeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Успешная авторизация",
                        "headers": {
                            "Set-Cookie": {
                                "description": "Устанавливает refresh_token в cookie",
                                "schema": {
                                    "type": "string",
                                    "example": "refresh_token=...; HttpOnly; Path=/; Max-Age=3600"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Пользователь успешно прошёл двухфакторную авторизацию"
                                        },
                                        "data": {
                                            "properties": {
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJh..."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Токен или код восстановления не найдены",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Отсутствует запись о токене двухфакторной авторизации"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Нет доступных кодов восстановления",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Для текущего пользователя не осталось активных кодов восстановления"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "У пользователя отключена двухфакторная авторизация",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Для данного пользователя отключена двухфакторная авторизация"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Ошибка валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "token": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Token is required"
                                                    }
                                                },
                                                "recovery_code": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Recovery code must be a string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/twoFactorVerification/refreshRecoveryCodes": {
            "post": {
                "tags": [
                    "Двухфакторная аутентификация"
                ],
                "summary": "Обновить резервные коды двухфакторной авторизации",
                "description": "Обновляет резервные коды для авторизованного пользователя, если двухфакторная авторизация включена и все старые коды использованы.",
                "operationId": "refreshRecoveryCodes",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное обновление резервных кодов",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Новые резервные коды"
                                        },
                                        "data": {
                                            "properties": {
                                                "recovery_codes": {
                                                    "description": "Список новых резервных кодов",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Двухфакторная авторизация отключена для пользователя",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Для данного пользователя отключена двухфакторная авторизация, поэтому обновление резервных кодов невозможно"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Пользователь еще не использовал все ранее предоставленные коды",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Текущий авторизованный пользователь не использовал все ранее предоставленные резервные коды"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/upload": {
            "post": {
                "tags": [
                    "Upload"
                ],
                "summary": "Загрузить файл на сервер",
                "description": "Загружает файл (максимум 10 МБ) и возвращает путь к нему. Доступ только авторизованным пользователям.",
                "operationId": "uploadFile",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    }
                ],
                "requestBody": {
                    "description": "Файл для загрузки",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Файл успешно загружен",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Файл был сохранён на сервере"
                                        },
                                        "data": {
                                            "properties": {
                                                "path": {
                                                    "type": "string",
                                                    "example": "/uploads/files/document.pdf"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка при определении файла",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "status",
                                        "message",
                                        "errors"
                                    ],
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ошибка определения типа файла"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "420": {
                        "$ref": "#/components/responses/NotVerifiedEmail"
                    },
                    "403": {
                        "$ref": "#/components/responses/NotAdmin"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tests/start": {
            "post": {
                "tags": [
                    "Тестирование (прохождение тестов на сайте)"
                ],
                "summary": "Начало теста",
                "description": "Запускает тест по его идентификатору. Возвращает ID попытки и список вопросов для прохождения.",
                "operationId": "3ee81b39c92520fe6ffe815731a8ae86",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StartTestRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Тест успешно запущен",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Тест с id = 101 был запущен пользователем с id = 55"
                                        },
                                        "data": {
                                            "properties": {
                                                "attemptId": {
                                                    "type": "integer",
                                                    "example": 125
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "420": {
                        "$ref": "#/components/responses/NotVerifiedEmail"
                    },
                    "404": {
                        "description": "Тест не найден",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Тест с id = 101 не найден"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "testId": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Поле \\'testId\\' обязательно для заполнения."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tests/questionsForTest/{attemptId}": {
            "get": {
                "tags": [
                    "Тестирование (прохождение тестов на сайте)"
                ],
                "summary": "Получение списка вопросов для теста",
                "description": "Возвращает список вопросов по идентификатору попытки прохождения теста. Доступно только авторизованному пользователю, которому принадлежит попытка, и только если попытка ещё не завершена и не истекло время выполнения теста.",
                "operationId": "questionsForTest",
                "parameters": [
                    {
                        "name": "attemptId",
                        "in": "path",
                        "description": "Идентификатор попытки прохождения теста.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 125
                        }
                    },
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список вопросов для теста.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Вопросы с теста = 101"
                                        },
                                        "data": {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/QuestionResource"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "420": {
                        "$ref": "#/components/responses/NotVerifiedEmail"
                    },
                    "409": {
                        "description": "Ошибка бизнес-логики: попытка не принадлежит пользователю, уже завершена или истекло время теста.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The attempt does not belong to the current user"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Ошибка бизнес-логики: запрашиваемая попытка не найдена",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Attempt does not exist"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tests/end": {
            "post": {
                "tags": [
                    "Тестирование (прохождение тестов на сайте)"
                ],
                "summary": "Завершение теста",
                "description": "Завершает тестовую попытку с передачей ответов пользователя. Проверяет валидность попытки, принадлежность текущему пользователю и срок действия теста.",
                "operationId": "endTest",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EndTestRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Результаты завершения теста с процентом правильных ответов.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Результаты теста для attemptId=123"
                                        },
                                        "data": {
                                            "properties": {
                                                "results": {
                                                    "properties": {
                                                        "percent": {
                                                            "type": "integer",
                                                            "example": 85
                                                        },
                                                        "total_count_questions": {
                                                            "type": "integer",
                                                            "example": 20
                                                        },
                                                        "correct_count_answers": {
                                                            "type": "integer",
                                                            "example": 17
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "420": {
                        "$ref": "#/components/responses/NotVerifiedEmail"
                    },
                    "404": {
                        "description": "Попытка теста не найдена.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Attempt not found"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Ошибка бизнес-логики: попытка не принадлежит пользователю, уже завершена или истекло время теста.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Attempt does not belong to user or attempt already completed or test time expired"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "attemptId": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Поле 'attemptId' обязательно для заполнения."
                                                    }
                                                },
                                                "answers": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Поле 'answers' обязательно для заполнения."
                                                    }
                                                },
                                                "answers.*.question_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Поле 'question_id' обязательно для заполнения в каждом элементе массива answers."
                                                    }
                                                },
                                                "answers.*.answer_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Поле 'answer_id' должно быть целым числом в каждом элементе массива answers."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/voices": {
            "get": {
                "tags": [
                    "Голоса"
                ],
                "summary": "Получение информации о допустимых голосах для озвучки в системе",
                "description": "Получение информации о допустимых голосах для озвучки в системе",
                "operationId": "getInfoVoices",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Номер страницы",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "example": 1
                        }
                    },
                    {
                        "name": "countOnPage",
                        "in": "query",
                        "description": "Количество элементов на странице",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "example": 10
                        }
                    },
                    {
                        "name": "languages",
                        "in": "query",
                        "description": "Параметр для фильтрации по языкам (коды языков через запятую)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "en_US,ru_RU,de_DE"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Полученные данные о голосах для озвучки",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ],
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Данные колод на странице 1"
                                        },
                                        "data": {
                                            "properties": {
                                                "items": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/DeckResource"
                                                    }
                                                },
                                                "pagination": {
                                                    "$ref": "#/components/schemas/PaginationResource"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "420": {
                        "$ref": "#/components/responses/NotVerifiedEmail"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Голоса"
                ],
                "summary": "Запустить обновление голосов",
                "description": "Ставит задачу на обновление голосов в очередь. Доступно только администраторам.",
                "operationId": "createVoice",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Задача поставлена в очередь",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ],
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Задача на обновление голосов поставлена в очередь"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "420": {
                        "$ref": "#/components/responses/NotVerifiedEmail"
                    },
                    "403": {
                        "$ref": "#/components/responses/NotAdmin"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Голоса"
                ],
                "summary": "Синхронизировать статусы голосов",
                "description": "Запускает процесс синхронизации статусов голосов из FreeTTS. Доступно только администраторам.",
                "operationId": "updateStatusOfVoices",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AcceptLanguageHeader"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Синхронизация запущена",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ],
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Синхронизация статусов голосов запущена"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "420": {
                        "$ref": "#/components/responses/NotVerifiedEmail"
                    },
                    "403": {
                        "$ref": "#/components/responses/NotAdmin"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "AuthRequest": {
                "title": "Auth Request (Данные для авторизации)",
                "description": "Данные, необходимые для авторизации пользователя",
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 255,
                        "example": "user@example.com"
                    },
                    "password": {
                        "type": "string",
                        "minLength": 8,
                        "example": "password123"
                    }
                },
                "type": "object"
            },
            "RegistrationRequest": {
                "title": "Registration Request (Данные для регистрации)",
                "description": "Данные, необходимые для регистрации нового пользователя",
                "required": [
                    "name",
                    "email",
                    "password",
                    "password_confirmation"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Иван Иванов"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 255,
                        "example": "ivan@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "minLength": 8,
                        "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]+$",
                        "example": "Str0ngP@ssword!"
                    },
                    "password_confirmation": {
                        "type": "string",
                        "format": "password",
                        "example": "Str0ngP@ssword!"
                    }
                },
                "type": "object"
            },
            "ResetPasswordRequest": {
                "title": "Reset Password Request (Данные для сброса пароля неавторизованного пользователя)",
                "description": "Данные, необходимые для сброса пароля пользователя",
                "required": [
                    "email",
                    "password",
                    "password_confirmation",
                    "token"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 255,
                        "example": "user@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "minLength": 8,
                        "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]+$",
                        "example": "NewP@ssword2025"
                    },
                    "password_confirmation": {
                        "type": "string",
                        "format": "password",
                        "example": "NewP@ssword2025"
                    },
                    "token": {
                        "type": "string",
                        "example": "eyJ0eXAiOiJKV1QiLCJh..."
                    }
                },
                "type": "object"
            },
            "SendResetLinkRequest": {
                "title": "Send Reset Link Request (Данные для отправки электронного сообщения на email - адрес с ссылкой для сброса пароля)",
                "description": "Данные, необходимые для отправки ссылки для сброс пароля неавторизованного пользователя",
                "required": [
                    "email"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 255,
                        "example": "user@example.com"
                    }
                },
                "type": "object"
            },
            "CreatingCardForDeckRequest": {
                "title": "Creating Card For Deck Request (Создание карточки в колоде)",
                "description": "Данные, небходимые для создания новой карточки для колоды",
                "required": [
                    "deck_id",
                    "word",
                    "translate"
                ],
                "properties": {
                    "deck_id": {
                        "description": "ID существующей колоды",
                        "type": "integer",
                        "example": 12
                    },
                    "word": {
                        "description": "Оригинальное слово",
                        "type": "string",
                        "maxLength": 255,
                        "example": "apple"
                    },
                    "translate": {
                        "description": "Перевод слова",
                        "type": "string",
                        "maxLength": 255,
                        "example": "яблоко"
                    },
                    "imagePath": {
                        "description": "Путь к изображению (если передаётся)",
                        "type": "string",
                        "example": "/images/cards/apple.jpg",
                        "nullable": true
                    },
                    "originalVoices": {
                        "description": "Массив ID оригинальных голосов",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "abc123-voice-id"
                        },
                        "nullable": true
                    },
                    "targetVoices": {
                        "description": "Массив ID целевых голосов",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "xyz789-voice-id"
                        },
                        "nullable": true
                    },
                    "examples": {
                        "description": "Примеры употребления слова",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "I eat an apple every day."
                        },
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "CheckCorrectSentenceRequest": {
                "title": "Check Correct Sentence Request (Проверка правильности предложения)",
                "description": "Данные для проверки грамматической корректности текста",
                "required": [
                    "language",
                    "text"
                ],
                "properties": {
                    "language": {
                        "description": "Код языка (например: en, ru, fr)",
                        "type": "string",
                        "example": "en"
                    },
                    "text": {
                        "description": "Предложение для проверки",
                        "type": "string",
                        "example": "This is a test sentence."
                    }
                },
                "type": "object"
            },
            "AddingTopicsToDeckRequest": {
                "title": "Adding Topics To Deck Request (Добавление тем в колоду)",
                "description": "Данные для добавления одной или нескольких тем в существующую колоду",
                "required": [
                    "topic_ids"
                ],
                "properties": {
                    "topic_ids": {
                        "description": "Список ID тем для добавления в колоду. Должен содержать хотя бы один элемент.",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "example": 12
                        }
                    }
                },
                "type": "object"
            },
            "CreateDeckRequest": {
                "title": "Create Deck Request (Создание колоды)",
                "description": "Данные для создания новой языковой колоды",
                "required": [
                    "name",
                    "original_language_id",
                    "target_language_id"
                ],
                "properties": {
                    "name": {
                        "description": "Название колоды",
                        "type": "string",
                        "maxLength": 255,
                        "example": "Фрукты и овощи"
                    },
                    "original_language_id": {
                        "description": "ID оригинального языка (например, английский)",
                        "type": "integer",
                        "example": 1
                    },
                    "target_language_id": {
                        "description": "ID целевого языка (например, испанский); должен отличаться от оригинального",
                        "type": "integer",
                        "example": 2
                    },
                    "is_premium": {
                        "description": "Флаг премиум-доступа к колоде",
                        "type": "boolean",
                        "example": false
                    }
                },
                "type": "object"
            },
            "DeckFilterRequest": {
                "title": "Deck Filter Request (Фильтрация колод)",
                "description": "Параметры фильтрации колод, передаются через query string",
                "properties": {
                    "page": {
                        "description": "Номер страницы",
                        "type": "integer",
                        "minimum": 1,
                        "example": 1
                    },
                    "countOnPage": {
                        "description": "Количество элементов на странице",
                        "type": "integer",
                        "minimum": 1,
                        "example": 10
                    },
                    "originalLanguages": {
                        "description": "Коды оригинальных языков через запятую. Пример: en,fr,de",
                        "type": "string",
                        "example": "en,fr"
                    },
                    "targetLanguages": {
                        "description": "Коды целевых языков через запятую. Пример: es,it",
                        "type": "string",
                        "example": "es,it"
                    },
                    "showPremium": {
                        "description": "Тип фильтрации премиум-колод: only — только премиум, exclude — исключить премиум, all — все.",
                        "type": "string",
                        "enum": [
                            "only",
                            "exclude",
                            "all"
                        ],
                        "example": "all"
                    }
                },
                "type": "object"
            },
            "EmailVerificationCodeRequest": {
                "title": "Email Verification Code Request (Данные для подтверждения электронной почты)",
                "description": "Запрос на подтверждение email кодом",
                "required": [
                    "code"
                ],
                "properties": {
                    "code": {
                        "description": "Код подтверждения email, состоящий из ровно 6 цифр",
                        "type": "string",
                        "pattern": "^\\d{6}$",
                        "example": "123456"
                    }
                },
                "type": "object"
            },
            "GetHistoryAttemptsRequestQueryParams": {
                "title": "Get History Attempts Request Query Params (Параметры запроса истории попыток прохождения тестов)",
                "description": "Query-параметры для получения истории попыток. Оба параметра являются необязательными и используются для пагинации.",
                "properties": {
                    "page": {
                        "description": "Номер страницы",
                        "type": "integer",
                        "minimum": 1,
                        "example": 1
                    },
                    "countOnPage": {
                        "description": "Количество элементов на странице",
                        "type": "integer",
                        "minimum": 1,
                        "example": 10
                    }
                },
                "type": "object"
            },
            "GetHistoryPurchaseRequest": {
                "title": "Get History Purchase Request Query Params (Параметры запроса истории покупок)",
                "description": "Query-параметры для получения истории покупок. Оба параметра являются необязательными и используются для пагинации.",
                "properties": {
                    "page": {
                        "description": "Номер страницы",
                        "type": "integer",
                        "minimum": 1,
                        "example": 1
                    },
                    "countOnPage": {
                        "description": "Количество элементов на странице",
                        "type": "integer",
                        "minimum": 1,
                        "example": 10
                    }
                },
                "type": "object"
            },
            "SetInviterRequest": {
                "title": "Set Inviter Request (Установка пригласившего пользователя)",
                "description": "Запрос для установки пригласившего пользователя по коду приглашения. Код должен состоять из 16 символов: только заглавные латинские буквы и цифры (A–Z, 0–9).",
                "required": [
                    "invite_code"
                ],
                "properties": {
                    "invite_code": {
                        "description": "Пригласительный код. Должен содержать ровно 16 символов: заглавные латинские буквы и цифры.",
                        "type": "string",
                        "maxLength": 16,
                        "minLength": 16,
                        "pattern": "^[A-Z0-9]{16}$",
                        "example": "AB12CD34EF56GH78"
                    }
                },
                "type": "object"
            },
            "AddingLanguageRequest": {
                "title": "Adding Language Request (Добавление нового языка)",
                "description": "Схема запроса на добавление нового языка в систему. Все поля обязательны.",
                "required": [
                    "name",
                    "native_name",
                    "code",
                    "flag",
                    "locale_lang"
                ],
                "properties": {
                    "name": {
                        "description": "Название языка на целевом языке (например, 'English')",
                        "type": "string",
                        "example": "English"
                    },
                    "native_name": {
                        "description": "Название языка на родном языке (например, 'Deutsch' для немецкого)",
                        "type": "string",
                        "example": "English"
                    },
                    "code": {
                        "description": "Двухсимвольный код языка по ISO 639-1",
                        "type": "string",
                        "maxLength": 2,
                        "minLength": 2,
                        "pattern": "^[a-z]{2}$",
                        "example": "en"
                    },
                    "flag": {
                        "description": "Путь к изображению флага (проверяется существование и принадлежность к каталогу изображений)",
                        "type": "string",
                        "example": "flags/en.png"
                    },
                    "locale_lang": {
                        "description": "Уникальный код локали (например, 'en_US', должен быть уникальным в таблице `languages` по полю `locale`)",
                        "type": "string",
                        "example": "en_US"
                    }
                },
                "type": "object"
            },
            "ActivatePromocodeRequest": {
                "title": "Activate Promocode Request (Активация промокода)",
                "description": "Схема запроса для активации промокода. Код должен состоять из 19 символов, разделённых дефисами, и быть в формате XXXX-XXXX-XXXX-XXXX (заглавные латинские буквы и цифры).",
                "required": [
                    "code"
                ],
                "properties": {
                    "code": {
                        "description": "Промокод в формате XXXX-XXXX-XXXX-XXXX. Только заглавные буквы и цифры. Пример: A1B2-C3D4-E5F6-G7H8",
                        "type": "string",
                        "maxLength": 19,
                        "minLength": 19,
                        "pattern": "^[A-Z0-9]{4}-[A-Z0-9]{4}-[A-Z0-9]{4}-[A-Z0-9]{4}$",
                        "example": "AB12-CD34-EF56-GH78"
                    }
                },
                "type": "object"
            },
            "CreatePromocodeRequest": {
                "title": "Create Promocode Request (Создание промокодов)",
                "description": "Схема для создания одного или нескольких промокодов. Требуется указать количество создаваемых кодов (целое положительное число).",
                "required": [
                    "count"
                ],
                "properties": {
                    "count": {
                        "description": "Количество создаваемых промокодов. Целое положительное число, минимум 1.",
                        "type": "integer",
                        "format": "int32",
                        "minimum": 1,
                        "example": 10
                    }
                },
                "type": "object"
            },
            "DatesForCountUsersByMonthsRequestQuery": {
                "title": "Dates For Count Users By Months Request Query (Диапазон месяцев для подсчёта пользователей)",
                "description": "Query-параметры для фильтрации по диапазону месяцев. Формат дат: YYYY-MM. Если указано одно значение, второе также обязательно. По умолчанию используется период с начала текущего года по текущий месяц.",
                "properties": {
                    "start_month": {
                        "description": "Начальный месяц в формате YYYY-MM. Должен быть меньше или равен end_month.",
                        "type": "string",
                        "format": "date",
                        "pattern": "^\\d{4}-(0[1-9]|1[0-2])$",
                        "example": "2024-01"
                    },
                    "end_month": {
                        "description": "Конечный месяц в формате YYYY-MM. Должен быть больше или равен start_month.",
                        "type": "string",
                        "format": "date",
                        "pattern": "^\\d{4}-(0[1-9]|1[0-2])$",
                        "example": "2024-08"
                    }
                },
                "type": "object"
            },
            "AddingNewTariffRequest": {
                "title": "Adding New Tariff Request (Добавление нового тарифа)",
                "description": "Схема запроса для создания нового тарифа с уникальным количеством дней и названием.",
                "required": [
                    "name",
                    "days"
                ],
                "properties": {
                    "name": {
                        "description": "Название тарифа.",
                        "type": "string",
                        "maxLength": 255,
                        "example": "Стандартный тариф"
                    },
                    "days": {
                        "description": "Количество дней тарифа. Должно быть уникальным в базе данных.",
                        "type": "integer",
                        "minimum": 1,
                        "example": 30
                    }
                },
                "type": "object"
            },
            "EndTestRequest": {
                "title": "End Test Request (Завершение теста)",
                "description": "Запрос для завершения теста с идентификатором попытки, флагом автоматического завершения и массивом ответов.",
                "required": [
                    "attemptId",
                    "automatic",
                    "answers"
                ],
                "properties": {
                    "attemptId": {
                        "description": "Идентификатор попытки теста.",
                        "type": "integer",
                        "example": 123
                    },
                    "answers": {
                        "description": "Массив ответов на вопросы теста.",
                        "type": "array",
                        "items": {
                            "required": [
                                "question_id"
                            ],
                            "properties": {
                                "question_id": {
                                    "description": "Идентификатор вопроса.",
                                    "type": "integer",
                                    "example": 10
                                },
                                "answer_id": {
                                    "description": "Идентификатор выбранного ответа. Может быть null.",
                                    "type": "integer",
                                    "example": 5,
                                    "nullable": true
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "StartTestRequest": {
                "title": "Start Test Request (Начало теста)",
                "description": "Запрос для начала теста с указанием идентификатора теста.",
                "required": [
                    "testId"
                ],
                "properties": {
                    "testId": {
                        "description": "Идентификатор теста для запуска.",
                        "type": "integer",
                        "example": 101
                    }
                },
                "type": "object"
            },
            "TimezoneFilterRequest": {
                "title": "Timezone Filter Request (Параметры фильтрации часовых поясов), которые передаются через query string",
                "description": "Параметры фильтрации часовых поясов",
                "properties": {
                    "page": {
                        "description": "Номер страницы (необязательный параметр)",
                        "type": "integer",
                        "minimum": 1
                    },
                    "countOnPage": {
                        "description": "Количество элементов на странице (необязательный параметр)",
                        "type": "integer",
                        "minimum": 1
                    },
                    "fields": {
                        "description": "Поля, которые нужно вернуть (необязательный параметр)",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreatingTopicRequest": {
                "title": "Creating Topic Request (схема для создания топика)",
                "description": "Данные для создания новой темы",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "История"
                    }
                },
                "type": "object"
            },
            "UpdatingTopicRequest": {
                "title": "Updating Topic Request (Обновление темы)",
                "description": "Данные для обновления существующей темы",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "description": "Новое имя темы",
                        "type": "string",
                        "maxLength": 255,
                        "example": "История России"
                    }
                },
                "type": "object"
            },
            "CodeGoogleAuthenticatorRequest": {
                "title": "Code Google Authenticator Request (Данные для подтверждения Google Authenticator)",
                "description": "Данные для подтверждения двухфакторной аутентификации с поомощью Google Authenticator.",
                "required": [
                    "token",
                    "code"
                ],
                "properties": {
                    "token": {
                        "description": "Токен для верификации пользователя.",
                        "type": "string",
                        "example": "abcdef123456"
                    },
                    "code": {
                        "description": "Код Google Authenticator.",
                        "type": "string",
                        "example": "123456"
                    }
                },
                "type": "object"
            },
            "ConfirmationCodeEmailTwoFactorAuthorizationRequest": {
                "title": "Confirmation Code Email Two Factor Authorization Request (Подтверждение двухфакторной аутентификации по Email)",
                "description": "Данные для подтверждения двухфакторной аутентификации по Email.",
                "required": [
                    "token",
                    "code"
                ],
                "properties": {
                    "token": {
                        "description": "Токен для верификации пользователя.",
                        "type": "string",
                        "example": "abcdef123456"
                    },
                    "code": {
                        "description": "Код подтверждения из email, ровно 6 символов.",
                        "type": "string",
                        "maxLength": 6,
                        "minLength": 6,
                        "example": "123456"
                    }
                },
                "type": "object"
            },
            "EnableDisableATwoFactorAuthorizationRequest": {
                "title": "Enable Disable A Two Factor Authorization Request (Включение или отключение двухфакторной аутентификации)",
                "description": "Данные для включения или отключения двухфакторной аутентификации с помощью электронной почты или Google Authorization.",
                "required": [
                    "type"
                ],
                "properties": {
                    "type": {
                        "description": "Тип двухфакторной аутентификации.",
                        "type": "string",
                        "enum": [
                            "email",
                            "googleAuthenticator"
                        ],
                        "example": "email"
                    }
                },
                "type": "object"
            },
            "TwoFactorAuthorizationTokenRequest": {
                "title": "TwoFactorAuthorizationTokenRequest (Запрос токена двухфакторной аутентификации для отправки электронного письма с кодом для авторизации)",
                "description": "Запрос токена двухфакторной аутентификации для отправки электронного письма с кодом для авторизации",
                "required": [
                    "token"
                ],
                "properties": {
                    "token": {
                        "description": "Токен для двухфакторной аутентификации.",
                        "type": "string",
                        "example": "abcdef123456"
                    }
                },
                "type": "object"
            },
            "UseRecoveryCodeRequest": {
                "title": "Use Recovery Code Request (Данные на использование кода восстановления)",
                "description": "Данные для запроса с токеном и кодом восстановления для двухфакторной аутентификации.",
                "required": [
                    "token",
                    "recovery_code"
                ],
                "properties": {
                    "token": {
                        "description": "Токен двухфакторной аутентификации.",
                        "type": "string",
                        "example": "abcdef123456"
                    },
                    "recovery_code": {
                        "description": "Код восстановления длиной ровно 8 символов.",
                        "type": "string",
                        "maxLength": 8,
                        "minLength": 8,
                        "example": "1234ABCD"
                    }
                },
                "type": "object"
            },
            "UpdatePasswordRequest": {
                "title": "Update Password Request Auth User (Данные для обновления пароля авторизованного пользователя )",
                "description": "Данные для запроса для обновления пароля авторизованного пользователя",
                "required": [
                    "password",
                    "password_confirmation"
                ],
                "properties": {
                    "password": {
                        "description": "Новый пароль, минимум 8 символов, должен содержать заглавные и строчные буквы, цифры и специальные символы.",
                        "type": "string",
                        "minLength": 8,
                        "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]+$",
                        "example": "StrongPass1!"
                    },
                    "password_confirmation": {
                        "description": "Подтверждение пароля, должно совпадать с полем password.",
                        "type": "string",
                        "example": "StrongPass1!"
                    }
                },
                "type": "object"
            },
            "UploadRequest": {
                "title": "Upload Request (Загрузка файла)",
                "description": "Данные запроса для загрузки файла (максимальный размер 10 МБ).",
                "required": [
                    "file"
                ],
                "properties": {
                    "file": {
                        "description": "Файл для загрузки",
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "GetVoicesRequest": {
                "title": "Get Voices Request Query Params (Query параметры запроса получения данных о поддерживаемых голосах в системе)",
                "description": "Query-параметры для получения данных о поддерживаемых голосах в системе. Оба параметра являются необязательными и используются для пагинации.",
                "properties": {
                    "page": {
                        "description": "Номер страницы",
                        "type": "integer",
                        "minimum": 1,
                        "example": 1
                    },
                    "countOnPage": {
                        "description": "Количество элементов на странице",
                        "type": "integer",
                        "minimum": 1,
                        "example": 10
                    }
                },
                "type": "object"
            },
            "DailyRewardResource": {
                "title": "DailyRewardResource (Ресурс ежедневной награды)",
                "description": "Информация об одной ежедневной награде пользователя",
                "required": [
                    "id",
                    "number_date",
                    "reward",
                    "is_take"
                ],
                "properties": {
                    "id": {
                        "description": "ID записи награды",
                        "type": "integer",
                        "example": 1
                    },
                    "number_date": {
                        "description": "Номер дня (например, 3 — третий день подряд)",
                        "type": "integer",
                        "example": 3
                    },
                    "reward": {
                        "description": "Размер награды (например, количество монет)",
                        "type": "integer",
                        "example": 100
                    },
                    "is_take": {
                        "description": "Флаг, получена ли награда пользователем",
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "DeckResource": {
                "title": "Deck Resource (Ресурс колоды)",
                "required": [
                    "id",
                    "name",
                    "is_premium",
                    "creation_time",
                    "visitors_count",
                    "tests_count",
                    "cards_count"
                ],
                "properties": {
                    "id": {
                        "description": "ID колоды",
                        "type": "integer",
                        "example": 10
                    },
                    "name": {
                        "description": "Название колоды",
                        "type": "string",
                        "example": "Основная колода"
                    },
                    "is_premium": {
                        "description": "Является ли колода премиум",
                        "type": "boolean",
                        "example": false
                    },
                    "creation_time": {
                        "description": "Дата и время создания",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-11T12:34:56"
                    },
                    "visitors_count": {
                        "description": "Количество посетителей",
                        "type": "integer",
                        "example": 100
                    },
                    "tests_count": {
                        "description": "Количество тестов в колоде",
                        "type": "integer",
                        "example": 5
                    },
                    "cards_count": {
                        "description": "Количество карточек в колоде",
                        "type": "integer",
                        "example": 50
                    },
                    "original_language": {
                        "description": "Исходный язык колоды",
                        "required": [
                            "id",
                            "name",
                            "code",
                            "flag_url"
                        ],
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "English"
                            },
                            "code": {
                                "type": "string",
                                "example": "en"
                            },
                            "flag_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://example.com/flags/en.png"
                            }
                        },
                        "type": "object"
                    },
                    "target_language": {
                        "description": "Целевой язык колоды",
                        "required": [
                            "id",
                            "name",
                            "code",
                            "flag_url"
                        ],
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 2
                            },
                            "name": {
                                "type": "string",
                                "example": "Russian"
                            },
                            "code": {
                                "type": "string",
                                "example": "ru"
                            },
                            "flag_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://example.com/flags/ru.png"
                            }
                        },
                        "type": "object"
                    },
                    "user": {
                        "description": "Пользователь - владелец колоды",
                        "required": [
                            "id",
                            "avatar_url",
                            "name"
                        ],
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 42
                            },
                            "avatar_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://example.com/avatar.jpg"
                            },
                            "name": {
                                "type": "string",
                                "example": "Владислав"
                            }
                        },
                        "type": "object"
                    },
                    "topics": {
                        "description": "Список тем, связанных с колодой",
                        "type": "array",
                        "items": {
                            "required": [
                                "id",
                                "name"
                            ],
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 3
                                },
                                "name": {
                                    "type": "string",
                                    "example": "Грамматика"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "tests": {
                        "description": "Список тестов колоды",
                        "type": "array",
                        "items": {
                            "required": [
                                "id",
                                "name",
                                "time_seconds",
                                "count_attempts",
                                "creation_time"
                            ],
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 101
                                },
                                "name": {
                                    "type": "string",
                                    "example": "Тест №1"
                                },
                                "time_seconds": {
                                    "description": "Время на прохождение теста в секундах",
                                    "type": "integer",
                                    "example": 900
                                },
                                "count_attempts": {
                                    "description": "Максимальное количество попыток",
                                    "type": "integer",
                                    "example": 3
                                },
                                "creation_time": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2025-08-01T10:00:00"
                                },
                                "authorized_user_attempts": {
                                    "description": "Количество попыток пользователя (опционально)",
                                    "type": "integer",
                                    "example": 1,
                                    "nullable": true
                                }
                            },
                            "type": "object"
                        }
                    },
                    "cards": {
                        "description": "Список карточек колоды",
                        "type": "array",
                        "items": {
                            "required": [
                                "id",
                                "word",
                                "translate",
                                "creation_time"
                            ],
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 555
                                },
                                "word": {
                                    "type": "string",
                                    "example": "Hello"
                                },
                                "translate": {
                                    "type": "string",
                                    "example": "Привет"
                                },
                                "image_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://example.com/images/hello.png",
                                    "nullable": true
                                },
                                "creation_time": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2025-08-10T15:45:00"
                                },
                                "original_word_audiofiles": {
                                    "description": "Аудиофайлы для исходного слова",
                                    "type": "array",
                                    "items": {
                                        "required": [
                                            "id",
                                            "path"
                                        ],
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1001
                                            },
                                            "path": {
                                                "type": "string",
                                                "example": "/audio/original/hello.mp3"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "target_word_audiofiles": {
                                    "description": "Аудиофайлы для целевого слова",
                                    "type": "array",
                                    "items": {
                                        "required": [
                                            "id",
                                            "path"
                                        ],
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1002
                                            },
                                            "path": {
                                                "type": "string",
                                                "example": "/audio/target/hello.mp3"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "ApiLimitFilterParametersResource": {
                "title": "API Limit Filter Parameters Resource (Ресурс для фильтров модели ApiLimit)",
                "description": "Доступные фильтры для модели API Limit: количество дней и запросов.",
                "required": [
                    "day_range",
                    "request_count_range"
                ],
                "properties": {
                    "day_range": {
                        "description": "Диапазон дней",
                        "required": [
                            "min",
                            "max"
                        ],
                        "properties": {
                            "min": {
                                "type": "integer",
                                "example": 1
                            },
                            "max": {
                                "type": "integer",
                                "example": 30
                            }
                        },
                        "type": "object"
                    },
                    "request_count_range": {
                        "description": "Диапазон количества запросов",
                        "required": [
                            "min",
                            "max"
                        ],
                        "properties": {
                            "min": {
                                "type": "integer",
                                "example": 10
                            },
                            "max": {
                                "type": "integer",
                                "example": 1000
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "DeckFilterParameterResource": {
                "title": "API Limit Filter Parameters Resource (Ресурс для фильтров модели Deck)",
                "description": "Параметры фильтрации колод: исходные и целевые языки, типы отображения колод.",
                "required": [
                    "original_languages",
                    "target_languages",
                    "types_show_deck"
                ],
                "properties": {
                    "original_languages": {
                        "description": "Список исходных языков (только имя языка).",
                        "type": "array",
                        "items": {
                            "required": [
                                "id",
                                "name"
                            ],
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "name": {
                                    "type": "string",
                                    "example": "English"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "target_languages": {
                        "description": "Список целевых языков (только имя языка).",
                        "type": "array",
                        "items": {
                            "required": [
                                "id",
                                "name"
                            ],
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": "1"
                                },
                                "name": {
                                    "type": "string",
                                    "example": "Russian"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "types_show_deck": {
                        "description": "Типы отображения колод",
                        "type": "array",
                        "items": {
                            "required": [
                                "name",
                                "display_value"
                            ],
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "example": "all"
                                },
                                "display_value": {
                                    "type": "string",
                                    "example": "Все"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "HistoryPurchaseResource": {
                "title": "HistoryPurchaseResource (Ресурс истории покупок пользователя)",
                "required": [
                    "id",
                    "date_purchase",
                    "date_end_vip_status_after_buying"
                ],
                "properties": {
                    "id": {
                        "description": "ID записи о покупке",
                        "type": "integer",
                        "example": 123
                    },
                    "date_purchase": {
                        "description": "Дата и время покупки",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-11T14:30:00"
                    },
                    "date_end_vip_status_after_buying": {
                        "description": "Дата окончания VIP-статуса после покупки",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-11T14:30:00"
                    },
                    "cost": {
                        "description": "Стоимость покупки",
                        "required": [
                            "id",
                            "cost"
                        ],
                        "properties": {
                            "id": {
                                "description": "ID стоимости",
                                "type": "integer",
                                "example": 55
                            },
                            "cost": {
                                "description": "Сумма стоимости",
                                "type": "number",
                                "format": "float",
                                "example": 199.99
                            },
                            "tariff": {
                                "description": "Тариф, связанный со стоимостью",
                                "required": [
                                    "id",
                                    "name",
                                    "days"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "ID тарифа",
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "name": {
                                        "description": "Название тарифа",
                                        "type": "string",
                                        "example": "Месячный"
                                    },
                                    "days": {
                                        "description": "Количество дней тарифа",
                                        "type": "integer",
                                        "example": 30
                                    }
                                },
                                "type": "object",
                                "nullable": true
                            },
                            "currency": {
                                "description": "Валюта стоимости",
                                "required": [
                                    "id",
                                    "name",
                                    "code",
                                    "symbol"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "ID валюты",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "description": "Название валюты",
                                        "type": "string",
                                        "example": "Российский рубль"
                                    },
                                    "code": {
                                        "description": "Код валюты",
                                        "type": "string",
                                        "example": "RUB"
                                    },
                                    "symbol": {
                                        "description": "Символ валюты",
                                        "type": "string",
                                        "example": "₽"
                                    }
                                },
                                "type": "object",
                                "nullable": true
                            }
                        },
                        "type": "object",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "InviterResource": {
                "title": "Inviter Resource (Ресурс для данных о пригласившем пользователе",
                "description": "Информация о пригласившем пользователе",
                "required": [
                    "id",
                    "name",
                    "avatar"
                ],
                "properties": {
                    "id": {
                        "description": "Уникальный идентификатор пользователя",
                        "type": "integer",
                        "example": 123
                    },
                    "name": {
                        "description": "Имя пользователя",
                        "type": "string",
                        "example": "Иван Иванов"
                    },
                    "avatar": {
                        "description": "URL аватара пользователя, может отсутствовать",
                        "type": "string",
                        "example": "https://example.com/avatars/123.jpg",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "LanguageResource": {
                "title": "Language Resource (ресурс языка)",
                "description": "Ресурс языка с основными свойствами",
                "required": [
                    "id",
                    "name",
                    "native_name",
                    "code",
                    "flag_url",
                    "locale"
                ],
                "properties": {
                    "id": {
                        "description": "Уникальный идентификатор языка",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "Название языка на английском",
                        "type": "string",
                        "example": "English"
                    },
                    "native_name": {
                        "description": "Название языка на родном языке",
                        "type": "string",
                        "example": "English"
                    },
                    "code": {
                        "description": "Код языка (например, en, ru)",
                        "type": "string",
                        "example": "en"
                    },
                    "flag_url": {
                        "description": "URL изображения флага языка",
                        "type": "string",
                        "format": "uri",
                        "example": "https://example.com/flags/en.png"
                    },
                    "locale": {
                        "description": "Локаль языка",
                        "type": "string",
                        "example": "en_US"
                    }
                },
                "type": "object"
            },
            "PaginationResource": {
                "title": "Pagination Resource (ресурс пагинации)",
                "description": "Структура данных пагинации",
                "required": [
                    "current_page",
                    "per_page",
                    "total",
                    "last_page",
                    "from",
                    "to",
                    "links"
                ],
                "properties": {
                    "current_page": {
                        "description": "Текущая страница",
                        "type": "integer",
                        "example": 1
                    },
                    "per_page": {
                        "description": "Количество элементов на странице",
                        "type": "integer",
                        "example": 10
                    },
                    "total": {
                        "description": "Общее количество элементов",
                        "type": "integer",
                        "example": 125
                    },
                    "last_page": {
                        "description": "Последняя страница",
                        "type": "integer",
                        "example": 13
                    },
                    "from": {
                        "description": "Номер первого элемента на странице",
                        "type": "integer",
                        "example": 1
                    },
                    "to": {
                        "description": "Номер последнего элемента на странице",
                        "type": "integer",
                        "example": 10
                    },
                    "links": {
                        "description": "Массив ссылок для навигации",
                        "required": [
                            "url",
                            "label",
                            "active"
                        ],
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "type": "string",
                                    "example": "https://example.com?page=2",
                                    "nullable": true
                                },
                                "label": {
                                    "type": "string",
                                    "example": "2"
                                },
                                "active": {
                                    "type": "boolean",
                                    "example": false
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "ProfileUserResource": {
                "title": "Profile User Resource (ресурс профиля пользователя)",
                "required": [
                    "id",
                    "name",
                    "email",
                    "created_at",
                    "vip_status_time_end",
                    "invite_code"
                ],
                "properties": {
                    "id": {
                        "description": "ID пользователя",
                        "type": "integer",
                        "example": 101
                    },
                    "name": {
                        "description": "Имя пользователя",
                        "type": "string",
                        "example": "Владислав"
                    },
                    "email": {
                        "description": "Email пользователя",
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com",
                        "nullable": true
                    },
                    "vip_status_time_end": {
                        "description": "Дата окончания VIP-статуса или null",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-10 12:00:00",
                        "nullable": true
                    },
                    "invite_code": {
                        "description": "Код приглашения (доступен только аутентифицированному пользователю)",
                        "type": "string",
                        "example": "ABCD1234",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Дата и время создания пользователя",
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-04-01 10:30:00"
                    },
                    "currency": {
                        "description": "Валюта пользователя",
                        "required": [
                            "id",
                            "name",
                            "code",
                            "symbol"
                        ],
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "Российский рубль"
                            },
                            "code": {
                                "type": "string",
                                "example": "RUB"
                            },
                            "symbol": {
                                "type": "string",
                                "example": "₽"
                            }
                        },
                        "type": "object",
                        "nullable": true
                    },
                    "timezone": {
                        "description": "Часовой пояс пользователя",
                        "required": [
                            "id",
                            "name",
                            "offset_utc"
                        ],
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 5
                            },
                            "name": {
                                "type": "string",
                                "example": "Europe/Moscow"
                            },
                            "offset_utc": {
                                "type": "string",
                                "example": "+03:00"
                            }
                        },
                        "type": "object",
                        "nullable": true
                    },
                    "inviter": {
                        "description": "Пользователь, который пригласил",
                        "required": [
                            "id",
                            "name",
                            "avatar"
                        ],
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 45
                            },
                            "name": {
                                "type": "string",
                                "example": "Иван Иванов"
                            },
                            "avatar": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://example.com/avatar.jpg"
                            }
                        },
                        "type": "object",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "VipStatusEndResource": {
                "title": "Vip Status End Resource (ресурс окончания vip-статуса пользователя)",
                "required": [
                    "vip_status_time_end"
                ],
                "properties": {
                    "vip_status_time_end": {
                        "description": "Дата окончания VIP-статуса или null",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-10 12:00:00",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "QuestionResource": {
                "title": "Question Resource (ресурс вопроса)",
                "required": [
                    "id",
                    "type",
                    "text"
                ],
                "properties": {
                    "id": {
                        "description": "ID вопроса",
                        "type": "integer",
                        "example": 123
                    },
                    "type": {
                        "description": "Тип вопроса",
                        "type": "string",
                        "example": "translate"
                    },
                    "text": {
                        "description": "Текст вопроса",
                        "type": "string",
                        "example": "Переведите слово"
                    },
                    "card": {
                        "description": "Карточка, связанная с вопросом (опционально, если загружена)",
                        "properties": {
                            "word": {
                                "description": "Слово (только для типа 'translate', иначе null)",
                                "type": "string",
                                "example": "cat",
                                "nullable": true
                            },
                            "image_url": {
                                "description": "URL изображения карточки",
                                "type": "string",
                                "format": "uri",
                                "example": "https://example.com/image.jpg",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "answers": {
                        "description": "Варианты ответов (опционально, если загружены)",
                        "type": "array",
                        "items": {
                            "required": [
                                "id",
                                "text"
                            ],
                            "properties": {
                                "id": {
                                    "description": "ID варианта ответа",
                                    "type": "integer",
                                    "example": 10
                                },
                                "text": {
                                    "description": "Текст варианта ответа",
                                    "type": "string",
                                    "example": "Кошка"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "SpellingCheckItemResource": {
                "title": "Spelling Check Item (ресурс проверки правописания)",
                "description": "Элемент результата проверки правописания",
                "properties": {
                    "original_word": {
                        "description": "Исходное слово, найденное с ошибкой",
                        "type": "string",
                        "example": "mispelled"
                    },
                    "suggestion": {
                        "description": "Возможные варианты исправления слова",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "misspelled"
                        }
                    }
                },
                "type": "object"
            },
            "CountUsersByMonthsResource": {
                "title": "Count Users By Months Resource (ресурс статистики - количество зарегистрированных пользователей по месяцам)",
                "required": [
                    "date",
                    "count",
                    "text"
                ],
                "properties": {
                    "date": {
                        "description": "Месяц и год в формате YYYY-MM",
                        "type": "string",
                        "pattern": "^\\d{4}-(0[1-9]|1[0-2])$",
                        "example": "2023-01"
                    },
                    "count": {
                        "description": "Количество пользователей, зарегистрированных в этом месяце",
                        "type": "integer",
                        "example": 15
                    }
                },
                "type": "object"
            },
            "TopicWithDecksCountResource": {
                "title": "Topic with Decks Count and Percentage (ресурс статистики о количестве активных колод в каждой тематике с процентным соотношении)",
                "description": "Ресурс, содержащий информацию о теме, количестве колод и их процентном соотношении",
                "required": [
                    "id",
                    "name",
                    "decks_count",
                    "percentage"
                ],
                "properties": {
                    "id": {
                        "description": "Уникальный идентификатор темы",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "Название темы",
                        "type": "string",
                        "example": "Mathematics"
                    },
                    "decks_count": {
                        "description": "Количество колод в данной теме",
                        "type": "integer",
                        "example": 42
                    },
                    "percentage": {
                        "description": "Процентное соотношение количества колод темы от общего количества колод",
                        "type": "number",
                        "format": "float",
                        "example": 15.25
                    }
                },
                "type": "object"
            },
            "TariffResource": {
                "title": "Tariff Resource (ресурс тарифа)",
                "required": [
                    "id",
                    "name",
                    "days"
                ],
                "properties": {
                    "id": {
                        "description": "ID тарифа",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "Название тарифа",
                        "type": "string",
                        "example": "Premium"
                    },
                    "days": {
                        "description": "Длительность тарифа в днях",
                        "type": "integer",
                        "example": 30
                    },
                    "costs": {
                        "description": "Список цен, связанных с тарифом",
                        "type": "array",
                        "items": {
                            "required": [
                                "id",
                                "cost"
                            ],
                            "properties": {
                                "id": {
                                    "description": "ID цены",
                                    "type": "integer",
                                    "example": 10
                                },
                                "cost": {
                                    "description": "Стоимость",
                                    "type": "number",
                                    "format": "float",
                                    "example": 499.99
                                },
                                "currency": {
                                    "description": "Валюта цены",
                                    "required": [
                                        "id",
                                        "name",
                                        "code",
                                        "symbol"
                                    ],
                                    "properties": {
                                        "id": {
                                            "description": "ID валюты",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "description": "Название валюты",
                                            "type": "string",
                                            "example": "Russian Ruble"
                                        },
                                        "code": {
                                            "description": "Код валюты",
                                            "type": "string",
                                            "example": "RUB"
                                        },
                                        "symbol": {
                                            "description": "Символ валюты",
                                            "type": "string",
                                            "example": "₽"
                                        }
                                    },
                                    "type": "object",
                                    "nullable": true
                                }
                            },
                            "type": "object"
                        },
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "TimezoneResource": {
                "title": "Timezone Resource (Ресурс для получения информации о временных зонах, поддерживаемых в системе)",
                "description": "Ресурс часового пояса",
                "properties": {
                    "id": {
                        "description": "Уникальный идентификатор",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "description": "Название часового пояса",
                        "type": "string"
                    },
                    "offset_utc": {
                        "description": "Смещение от UTC в минутах",
                        "type": "integer"
                    },
                    "created_at": {
                        "description": "Дата и время создания",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Дата и время последнего обновления",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "TopicResource": {
                "title": "Topic Resource (ресурс топика)",
                "required": [
                    "id",
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "История"
                    }
                },
                "type": "object"
            },
            "UserTestAnswerResource": {
                "title": "User Test Answer Resource (ресурс пользовательских ответов на вопросы к тесту)",
                "properties": {
                    "question": {
                        "description": "Вопрос теста",
                        "required": [
                            "id",
                            "text",
                            "type"
                        ],
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 123
                            },
                            "text": {
                                "type": "string",
                                "example": "Как переводится слово 'apple'?"
                            },
                            "type": {
                                "type": "string",
                                "example": "translate"
                            },
                            "card": {
                                "description": "Карточка с изображением и словом",
                                "required": [
                                    "id",
                                    "image_url"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 456
                                    },
                                    "image_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://example.com/image.jpg"
                                    }
                                },
                                "type": "object"
                            },
                            "correct_answer": {
                                "description": "Правильный ответ на вопрос",
                                "required": [
                                    "id",
                                    "text_answer"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 789
                                    },
                                    "text_answer": {
                                        "type": "string",
                                        "example": "яблоко"
                                    }
                                },
                                "type": "object"
                            },
                            "user_answer": {
                                "description": "Ответ пользователя",
                                "required": [
                                    "id",
                                    "text_answer",
                                    "is_correct"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1011
                                    },
                                    "text_answer": {
                                        "type": "string",
                                        "example": "яблоко"
                                    },
                                    "is_correct": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UserTestResultResource": {
                "title": "User Test Result (Ресурс для результатов пользователя для попытки прохождения теста)",
                "required": [
                    "id",
                    "score",
                    "start_time",
                    "finish_time",
                    "number_attempt"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 101
                    },
                    "score": {
                        "description": "Баллы пользователя за тест",
                        "type": "number",
                        "format": "float",
                        "example": 85.5
                    },
                    "start_time": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-11T14:00:00Z"
                    },
                    "finish_time": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-11T14:30:00Z"
                    },
                    "number_attempt": {
                        "description": "Номер попытки прохождения теста",
                        "type": "integer",
                        "example": 1
                    },
                    "test": {
                        "description": "Данные теста",
                        "required": [
                            "id",
                            "name",
                            "time_seconds",
                            "count_attempts"
                        ],
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 10
                            },
                            "name": {
                                "type": "string",
                                "example": "Тест по английскому"
                            },
                            "time_seconds": {
                                "description": "Время на тест в секундах",
                                "type": "integer",
                                "example": 1800
                            },
                            "count_attempts": {
                                "description": "Максимальное количество попыток",
                                "type": "integer",
                                "example": 3
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "VoiceResource": {
                "title": "Voice Resource (ресурс для информации о голосе с помощью которого можно озвучить текст)",
                "required": [
                    "id",
                    "voice_id",
                    "voice_name",
                    "sex",
                    "is_active"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "voice_id": {
                        "type": "string",
                        "example": "voice_123"
                    },
                    "voice_name": {
                        "type": "string",
                        "example": "Alex"
                    },
                    "sex": {
                        "type": "string",
                        "enum": [
                            "male",
                            "female",
                            "other"
                        ],
                        "example": "male"
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "language": {
                        "description": "Язык голоса",
                        "required": [
                            "id",
                            "name",
                            "native_name",
                            "code",
                            "flag_url",
                            "locale"
                        ],
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 10
                            },
                            "name": {
                                "type": "string",
                                "example": "English"
                            },
                            "native_name": {
                                "type": "string",
                                "example": "English"
                            },
                            "code": {
                                "type": "string",
                                "example": "en"
                            },
                            "flag_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://example.com/flags/en.png"
                            },
                            "locale": {
                                "type": "string",
                                "example": "en_US"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "NotAdmin": {
                "description": "Пользователь не является администратором",
                "content": {
                    "application/json": {
                        "schema": {
                            "required": [
                                "status",
                                "message",
                                "errors"
                            ],
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "error"
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Пользователь не является администратором"
                                },
                                "errors": {
                                    "type": "object",
                                    "example": null,
                                    "nullable": true
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "NotVerifiedEmail": {
                "description": "Электронный адрес пользователя не подтвержден",
                "content": {
                    "application/json": {
                        "schema": {
                            "required": [
                                "status",
                                "message",
                                "errors"
                            ],
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "error"
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Электронная почта авторизованного пользователя не подтверждена"
                                },
                                "errors": {
                                    "type": "object",
                                    "example": null,
                                    "nullable": true
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "Unauthorized": {
                "description": "Пользователь не авторизован",
                "content": {
                    "application/json": {
                        "schema": {
                            "required": [
                                "status",
                                "message",
                                "errors"
                            ],
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": "error"
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Пользователь не авторизован и не имеет доступа к данным"
                                },
                                "errors": {
                                    "type": "object",
                                    "example": null,
                                    "nullable": true
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "parameters": {
            "AcceptLanguageHeader": {
                "name": "Accept-Language",
                "in": "header",
                "description": "Язык локали",
                "required": true,
                "schema": {
                    "type": "string",
                    "default": "ru",
                    "enum": [
                        "ru",
                        "en"
                    ]
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Ответы",
            "description": "Ответы"
        },
        {
            "name": "Аутентификация",
            "description": "Аутентификация"
        },
        {
            "name": "Аутентификация через OAuth",
            "description": "Аутентификация через OAuth"
        },
        {
            "name": "Обновление токенов авторизации",
            "description": "Обновление токенов авторизации"
        },
        {
            "name": "Выход из аккаунта",
            "description": "Выход из аккаунта"
        },
        {
            "name": "Сброс пароля для неавторизованного пользователя",
            "description": "Сброс пароля для неавторизованного пользователя"
        },
        {
            "name": "Обновление пароля авторизованного пользователя",
            "description": "Обновление пароля авторизованного пользователя"
        },
        {
            "name": "Регистрация",
            "description": "Регистрация"
        },
        {
            "name": "Ежедневная награда",
            "description": "Ежедневная награда"
        },
        {
            "name": "Колоды",
            "description": "Колоды"
        },
        {
            "name": "Верификация электронного адреса",
            "description": "Верификация электронного адреса"
        },
        {
            "name": "История попыток прохождения тестов",
            "description": "История попыток прохождения тестов"
        },
        {
            "name": "История покупок",
            "description": "История покупок"
        },
        {
            "name": "Привязка к пользователю, который пригласил в систему",
            "description": "Привязка к пользователю, который пригласил в систему"
        },
        {
            "name": "Языки",
            "description": "Языки"
        },
        {
            "name": "Профиль",
            "description": "Профиль"
        },
        {
            "name": "Промокоды",
            "description": "Промокоды"
        },
        {
            "name": "Проверка правописания",
            "description": "Проверка правописания"
        },
        {
            "name": "Статистика",
            "description": "Статистика"
        },
        {
            "name": "Тарифы",
            "description": "Тарифы"
        },
        {
            "name": "Временные зоны",
            "description": "Временные зоны"
        },
        {
            "name": "Топики",
            "description": "Топики"
        },
        {
            "name": "Двухфакторная аутентификация",
            "description": "Двухфакторная аутентификация"
        },
        {
            "name": "Upload",
            "description": "Upload"
        },
        {
            "name": "Тестирование (прохождение тестов на сайте)",
            "description": "Тестирование (прохождение тестов на сайте)"
        },
        {
            "name": "Голоса",
            "description": "Голоса"
        }
    ]
}